<!DOCTYPE html>
<html>

<head lang="en">
  <meta charset="UTF-16" />
  <title>Memorize numbers easily using Kaṭapayādi system</title>


  <link rel="stylesheet" href="foundation.min.css">
  <link href="clusterize.css" rel="stylesheet">
  <script src="clusterize.min.js"></script>
  <script src="katapayadi_data.js"></script>
  
    <style>

    .clusterize, input{
      width: 100%;
    }
    
    .clusterize-scroll {
      max-height: 500px;
    }

    table{
      width: 100%;
      margin-bottom: 0;
    }

    body {
      margin: 20px;
    }

  </style>
  
</head>

<body>
<div class="container">
  <input type="text" id="search" placeholder="Type number here to memorize ..."/>

  <div class="clusterize">
    <table>
      <thead>
        <tr>
          <th>Number</th>
          <th>Kaṭapayādi Sanskṛta Noun</th>
        </tr>
      </thead>
    </table>
    <div id="scrollArea" class="clusterize-scroll">
      <table>
        <tbody id="contentArea" class="clusterize-content">
          <tr class="clusterize-no-data">
            <td>Loading data…</td>
          </tr>
        </tbody>
      </table>
    </div> 
  </div>
</div>

<script type="text/javascript">
  
    var rows = [],
        search = document.getElementById('search');

    /* Fill array with data
     *
     * Fields:
     * values *array* - value of each field (in case use of table)
     * markup *string* - markup that will be added to the DOM
     * active *bool* - specifies if row is suitable by search phrase
    */
    for(var i = 0; i < data.length; i++){
      rows.push({
        values: data[i],
        markup: '<tr>' +
                  '<td>' + data[i][0] + '</td>' +
                  '<td><a href=\'https://www.sanskritdictionary.com/?iencoding=iast&q='  + 
                   data[i][1] + '&lang=sans&action=Search\' target=\'_blank\'>' + data[i][1] + '</a></td>' +
                '</tr>',
        active: true
      });
    }

    /*
    * Fetch suitable rows
    */
    var filterRows = function(rows) {
      var results = [];
      for(var i = 0, ii = rows.length; i < ii; i++) {
        if(rows[i].active) results.push(rows[i].markup)
      }
      return results;
    }

    /*
    * Init clusterize.js
    */
    var clusterize = new Clusterize({
      rows: filterRows(rows),
      scrollId: 'scrollArea',
      contentId: 'contentArea'
    });

    /*
    * prefix search
    */
    var onSearch = function() {
      for(var i = 0, ii = rows.length; i < ii; i++) {
        var suitable = false;
        if(rows[i].values[0].toString().startsWith(search.value)){
          suitable = true;
        }
        // for(var j = 0, jj = rows[i].values.length; j < jj; j++) {
        //   if(rows[i].values[j].toString().indexOf(search.value) + 1)
        //     suitable = true;
        // }
        rows[i].active = suitable;
      }
      clusterize.update(filterRows(rows));
    }
    search.oninput = onSearch;

</script>
  
  <p style="font-size: x-small;text-align: center;">Attributions : <br>
     * Katapayadi system : [ https://en.wikipedia.org/wiki/Katapayadi_system ] *<br> 
     * The Sanskrit words are from : [https://www.sanskritdictionary.com/frequency/] *<br>
     * Katapayadi numbers above were generated using KatapayadiEngine *<br>
     * Rendering of this huge dataset is possible due to : [https://clusterize.js.org/] *<br>
     * KatapayadiEngine and this UI has been created on 5th and 6th May 2019 by Vikas Veshishth Gargay *
  </p>

</body>
</html>
